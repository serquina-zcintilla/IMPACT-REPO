package default1;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.*;
import javafx.scene.paint.*;
import javafx.scene.text.Font;
import javafx.stage.Stage;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

public class LogInPage extends Application {

    private static final String ADMIN_USERNAME = "admin";
    // SHA-256 hash of your password, e.g. "admin123"
    private static final String ADMIN_PASSWORD_HASH = "240be518fabd2724ddb6f04eeb1da5967448d7e831c08c8fa822809f74c720a9";

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage adminStage) {
        adminStage.setTitle("Admin Login");

        VBox mainVBox = new VBox(10);
        mainVBox.setAlignment(Pos.CENTER);
        mainVBox.setPadding(new Insets(20));

        StackPane root = new StackPane();
        root.setBackground(new Background(new BackgroundFill(
                new LinearGradient(0, 0, 1, 1, true, CycleMethod.NO_CYCLE,
                        new Stop(0, Color.web("#003366")),
                        new Stop(1, Color.web("#0066CC"))),
                CornerRadii.EMPTY, Insets.EMPTY)));

        Label titleLabel = new Label("Admin Login");
        titleLabel.setFont(Font.font("Segoe UI", 28));
        titleLabel.setTextFill(Color.WHITE);

        Label userLabel = new Label("Username");
        userLabel.setFont(Font.font("Segoe UI", 16));
        userLabel.setTextFill(Color.WHITE);
        TextField userField = new TextField();
        userField.setMaxWidth(300);

        Label passLabel = new Label("Password");
        passLabel.setFont(Font.font("Segoe UI", 16));
        passLabel.setTextFill(Color.WHITE);
        PasswordField passField = new PasswordField();
        passField.setMaxWidth(300);

        Button loginBtn = new Button("Log In");
        loginBtn.setFont(Font.font("Segoe UI", 16));
        loginBtn.setStyle("-fx-background-color: white; -fx-text-fill: #003366;");
        loginBtn.setOnMouseEntered(e -> loginBtn.setStyle("-fx-background-color: #cce6ff; -fx-text-fill: #003366;"));
        loginBtn.setOnMouseExited(e -> loginBtn.setStyle("-fx-background-color: white; -fx-text-fill: #003366;"));

        loginBtn.setOnAction(e -> {
            String username = userField.getText();
            String password = passField.getText();
            String hashedInput = hashPassword(password);

            if (username.equals(ADMIN_USERNAME) && hashedInput.equals(ADMIN_PASSWORD_HASH)) {
                Alert alert = new Alert(Alert.AlertType.INFORMATION, "Login successful!");
                alert.showAndWait();
                adminStage.close();
                // Open CleaningInventory1 dashboard
                CleaningInventory1 inventory = new CleaningInventory1();
                Stage inventoryStage = new Stage();
                try {
                    inventory.start(inventoryStage);
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            } else {
                Alert alert = new Alert(Alert.AlertType.ERROR, "Invalid credentials. Try again.");
                alert.showAndWait();
            }
        });

        Label backToRegister = new Label("Back to Registration");
        backToRegister.setFont(Font.font("Segoe UI", 14));
        backToRegister.setTextFill(Color.WHITE);
        backToRegister.setOnMouseEntered(e -> backToRegister.setTextFill(Color.LIGHTGRAY));
        backToRegister.setOnMouseExited(e -> backToRegister.setTextFill(Color.WHITE));
        backToRegister.setOnMouseClicked((MouseEvent e) -> {
            adminStage.close();
            Stage registrationStage = new Stage();
            try {
                new RegistrationPage().start(registrationStage);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        });

        mainVBox.getChildren().addAll(
                titleLabel,
                userLabel, userField,
                passLabel, passField,
                loginBtn,
                backToRegister
        );

        root.getChildren().add(mainVBox);
        Scene scene = new Scene(root, 800, 600);
        adminStage.setScene(scene);
        adminStage.show();
    }

    public static String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hashedBytes = md.digest(password.getBytes());
            StringBuilder sb = new StringBuilder();
            for (byte b : hashedBytes) {
                sb.append(String.format("%02x", b));
            }
            return sb.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }
}
